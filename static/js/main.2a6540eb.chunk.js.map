{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","imgUrl","alt","title","description","MoviesList","movies","map","imdbId","getFilm","a","fetch","res","json","FindMovie","addMovies","useState","isDetected","setIsDetected","setTitle","newMovie","setNewMovie","loadFilm","uploadFilm","Response","Title","Plot","Poster","imdbUrl","imdbID","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","handleChange","onClick","App","getMovies","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a6540eb.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.description}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?apikey=374960bd';\n\nexport const getFilm = async (title: string) => {\n  const res = await fetch(`${API_URL}&t=${title}`);\n\n  return res.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getFilm } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovies: (newMovie: Movie) => void,\n};\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovies } = props;\n  const [isDetected, setIsDetected] = useState(true);\n  const [title, setTitle] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    setIsDetected(true);\n  };\n\n  const loadFilm = async () => {\n    const uploadFilm = await getFilm(title);\n\n    if (uploadFilm.Response === 'False') {\n      setNewMovie(null);\n      setIsDetected(false);\n\n      return;\n    }\n\n    setIsDetected(true);\n\n    setNewMovie({\n      title: uploadFilm.Title,\n      description: uploadFilm.Plot,\n      imgUrl: uploadFilm.Poster,\n      imdbUrl: `https://www.imdb.com/title/${uploadFilm.imdbID}`,\n      imdbId: uploadFilm.imdbID,\n    });\n\n    setTitle('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': !isDetected })}\n              value={title}\n              onChange={(event) => handleChange(event)}\n            />\n          </div>\n\n          {!isDetected && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (newMovie !== null) {\n                  addMovies(newMovie);\n                }\n\n                setNewMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie\n          && <MovieCard movie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, getMovies] = useState<Movie[]>([]);\n\n  const addMovies = (newMovie: Movie) => {\n    if (!movies.find(item => item.imdbId === newMovie.imdbId)) {\n      getMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}